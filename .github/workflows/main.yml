# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  STAGE_AWS_S3_BUCKET_NAME: try-aws-s3-arno

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # Step 2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          
      # Step 3
      - name: Install dependencies
        # run: yarn
        run: npm i
        
      # Step 4
      - name: Build and Deploy stage, Update cloudFront cache
        if: github.ref == 'refs/heads/master'
        run: |
          npm run build
          aws s3 rm s3://${{ env.STAGE_AWS_S3_BUCKET_NAME }} --recursive
          aws s3 sync dist s3://${{ env.STAGE_AWS_S3_BUCKET_NAME }}/
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_STAGE_DISTRIBUTION_ID }} --paths "/*"